! Inform 1
## Section

## Section {marker1} 	{marker2}  

! End

! Inform 2
# Welcome to Inform
## Preface
## Acknowledgements
## The facing pages
## The Go! button {PM_StartsOutsideRooms} {PM_NoStartRoom}
## The Replay button
## The Index and Results panels
## The Skein
# The Source Text
## Creating the world {PM_NoSuchVerb} {PM_NoSuchVerbComma} {PM_NegatedVerb1} {PM_TwoLikelihoods} {PM_CantAssertAdjective} {PM_CantAssertNegatedEverywhere} {PM_CantAssertNegatedRelations} {PM_CantAssertNonKind} {PM_CantAssertQuantifier}
## Making rules
## Punctuation {PM_UnendingQuote} {PM_UnendingComment} {PM_TooMuchQuotedText} {PM_WordTooLong} {PM_EnigmaticPronoun} {PM_EnigmaticThey}
## Problems
## Headings {HEADINGS} {PM_HeadingOverLine} {PM_HeadingStopsBeforeEndOfLine} {PM_BadTitleSentence}
## Why using headings is a good idea
## The SHOWME command
## The TEST command {PM_TestMultiWord} {PM_TestDuplicate} {PM_TestBadRequirements} {PM_TestContainsUndo} {PM_TestCommandTooLong} {PM_TestDoubleWith} {PM_UnknownInternalTest}
## Material not for release
## Installing extensions {PM_BogusExtension}
## Including extensions {PM_IncludeExtQuoted} {PM_ExtVersionMalformed} {PM_ExtMiswordedBeginsHere} {PM_ExtInadequateVM} {PM_ExtMisidentifiedEnds}
## Use options {PM_UONotNumerical} {PM_UnknownUseOption} {OPTIONS}
## Administering classroom use {OPTIONSFILE}
## Limits and the Settings panel {PM_BadICLIdentifier} {STORYFILES}
## What to do about a bug
## Does Inform really understand English?
# Things
## Descriptions
## Rooms and the map {kind_room} {MAP} {PM_SameKindEquated} {PM_DescriptionsEquated}
## One-way connections
## Regions and the index map {kind_region} {REGIONS} {PM_ExistingRegion} {PM_RegionInTwoRegions} {PM_RegionRelation}
## Kinds {KINDS} {PM_BothRoomAndSupporter} {PM_CantContainAndSupport} {PM_MiseEnAbyme} {PM_KindsIncompatible}
## Either/or properties
## Properties depend on kind {PM_PropertyNotPermitted}
## Scenery
## Backdrops {kind_backdrop} {PM_EverywhereNonBackdrop} {PM_CantChangeEverywhere} {PM_EverywhereMisapplied}
## Properties holding text
## Two descriptions of things {PM_TwoAppearances} {PM_TextWithoutSubject}
## Doors {kind_door} {PM_BothWaysDoor} {PM_DoorUnconnected} {PM_DoorOverconnected} {PM_DoorToNonRoom} {PM_DoorInThirdRoom} {PM_RoomMissingDoor} {PM_BadMapCell}
## Locks and keys
## Devices and descriptions {kind_device}
## Light and darkness
## Vehicles and pushable things {kind_vehicle}
## Men, women and animals {kind_person}
## Articles and proper names
## Carrying capacity
## Possessions and clothing
## The player's holdall {kind_player's}
## Food
## Parts of things {PM_PartOfRoom} {PM_RoomOrDoorAsPart}
## Concealment
## The location of something
## Directions {kind_direction} {PM_TooManyDirections} {PM_ImproperlyMadeDirection} {PM_DirectionTooLong} {PM_NamelessDirection}
# Kinds
## New kinds {NEWKINDS}
## Using new kinds
## Degrees of certainty
## Plural assertions {PM_PluralOfQuoted} {PM_PluralIsQuoted}
## Kinds of value {KINDSVALUE}
## Properties again {PM_ValueCantHaveProperties} {PM_ValueCantHaveVProperties}
## New either/or properties {PM_EitherOrAsValue} {PM_QualifiedCanBe} {PM_NonObjectCanBe} {PM_MiscellaneousEOProblem} {PM_ThisIsEitherOr}
## New value properties {PM_PropertyOfKind1} {PM_PropertyCalledArticle} {PM_PropertyCalledPresence} {PM_PropertyNameForbidden} {PM_PropertyUninitialisable} {PM_BadVisibilityWhen} {PM_PropertyTooSpecific} {PM_PropertyKindUnknown} {PM_PropertyKindVague} {PM_PropertyKindClashes} {PM_BadProvides} {PM_RedundantThatVaries}
## Using new kinds of value in properties
## Conditions of things {PM_EitherOnThree}
## Default values of kinds
## Values that vary {var_location} {VARIABLES} {PM_EmptyKind}
## Values that never vary
## Duplicates {PM_TooManyDuplicates}
## Assemblies and body parts {PM_AssemblyLoop} {PM_AssemblyRegress} {PM_ComplexEvery}
## Names made in assembly
## Postscript on simulation
# Text
## Text with substitutions {PM_TSWithPunctuation}
## How Inform reads quoted text
## Text which names things
## Text with numbers
## Text with lists
## Text with variations {PM_SayIfNested} {PM_SayOtherwiseWithoutIf} {PM_SayEndIfWithoutSayIf}
## Text with random alternatives {PM_ComplicatedSayStructure} {PM_ComplicatedSayStructure2} {PM_ComplicatedSayStructure5} {PM_ComplicatedSayStructure4} {PM_ComplicatedSayStructure3}
## Line breaks and paragraph breaks
## Text with type styles
## Accented letters
## Unicode characters {PM_SayUnicode} {PM_MidTextUnicode} {PM_UnicodeOutOfRange}
## Displaying quotations
## Making new substitutions
# Descriptions
## What are descriptions? {DESCRIPTIONS}
## Adjectives and nouns
## Sources of adjectives
## Defining new adjectives {PM_DefinitionBadCondition} {PM_DefinitionWithoutCondition} {PM_AdjDomainSlippery} {PM_AdjDomainSurreal} {PM_AdjDomainUnknown} {PM_ArticleAsAdjective}
## Defining adjectives for values
## Whereabouts on a scale?
## Comparatives {PM_ComparativeMisapplied} {PM_GradingCalled} {PM_GradingMisphrased} {PM_GradingNonLiteral} {PM_GradingUnknownProperty} {PM_GradingUnless} {PM_GradingWrongKOV} {PM_MultiwordGrading}
## Superlatives
## Which and who
## Existence and there {PM_OutOfPlay}
## A word about in
## A word about nothing
## To be able to see and touch
## Adjacent rooms and routes through the map
## All, each and every {PM_ComplexDeterminer}
## Counting while comparing
# Basic Actions
## Actions {ACTIONS} {kind_actionname} {PM_APWithNoParticiple} {PM_APUnknown} {PM_NonActionIn}
## Instead rules {rules_instead}
## Before rules {rules_before}
## Try and try silently {PM_UnknownTryAction1} {PM_UnknownTryAction2} {PM_ActionNotSpecific} {PM_ActionTooSpecific}
## After rules {rules_after}
## Reading and talking
## The other four senses
## Rules applying to more than one action {PM_APWithDisjunction}  {PM_APWithImmiscible}
## All actions and exceptional actions
## The noun and the second noun {var_noun}
## In rooms and regions
## In the presence of, and when {PM_NonActionInPresenceOf} {PM_APWithBadWhen}
## Going from, going to
## Going by, going through, going with {PM_GoingWrongKind} {PM_GoingWithoutObject}
## Kinds of action {PM_NamedAPWithActor} {KACTIONS}
## Repeated actions
## Actions on consecutive turns
## Postscript on actions
# Change
## Change of values that vary
## Changing the command prompt {var_prompt}
## Changing the status line {var_sl}
## Change of either/or properties
## Change of properties with values
## Whose property?
## Moving things
## Moving backdrops
## Moving the player
## Removing things from play
## Now... {PM_BadNow1} {PM_BadNow2} {PM_BadNow3} {PM_CantForceRelation} {PM_CantForceExistence} {PM_CantForceGeneralised} {PM_CantForceCalling} {PM_CantChangeKind} {PM_RedefinedNow}
## Increasing and decreasing
## Checking on whereabouts
## More flexible descriptions of whereabouts
## Calling names {PM_CalledThe} {PM_CalledWithDash}
## Counting the number of things
## Looking at containment by hand
## Randomness
## Random choices of things {PM_RandomImpossible}
# Time
## When play begins {ROOMPLAYBEGINS} {rules_wpb}
## Awarding points {var_score}
## Introducing tables: rankings
## When play ends {rules_wpe}
## Every turn {rules_et} {PM_NumberOfTurns}
## The time of day {kind_time} {var_time}
## Telling the time
## Approximate times, lengths of time
## Comparing and shifting times
## Calculating times
## Future events {PM_AtWithoutTime} {PM_UnusedTimedEvent} {TIMEDEVENTS}
## Actions as conditions {PM_PTAPTooComplex}
## The past and perfect tenses {PM_PastSubordinate} {PM_PTAPMakesCallings} {PM_PastTableLookup} {PM_PastCallings}  {PM_PastActionCalled} {PM_NonPresentTense} {PM_PastTableEntries}
## How many times?
## How many turns?
# Scenes
## Introduction to scenes {SCENESINTRO} {kind_scene}
## Creating a scene {PM_ScenesNotPlay} {PM_ScenesDisallowCalled} {PM_ScenesOnly} {PM_ScenesUnknownEnd} {PM_ScenesOversetEnd} {PM_ScenesBadCondition}
## Using the Scene index
## During scenes
## Linking scenes together {LINKINGSCENES}
## More general linkages
## Multiple beginnings and repeats
## Multiple endings
## Why are scenes designed this way?
# Phrases
## What are phrases? {PHRASES}
## The phrasebook {PM_BareTo}
## Pattern matching {PM_TokenWithoutOpenBracket} {PM_TokenWithoutCloseBracket} {PM_TokenWithEmptyBrackets} {PM_TokenWithNestedBrackets} {PM_BadTypeIndication} {PM_TokenMisunderstood} {PM_PhraseTooLong} {PM_AdjacentTokens}  {PM_SaySlashed}
## The showme phrase
## Conditions and questions {kind_truthstate} {PM_TruthStateToDecide}
## If {PM_IfOutsidePhrase}
## Begin and end {PM_BeginWithoutEnd} {PM_BlockNestingTooDeep} {PM_EndWithoutBegin} {PM_WrongEnd} {PM_CantUseOutsideStructure} {PM_BothBlockSyntaxes} {PM_NotInOldSyntax} {PM_MisalignedIndentation} {PM_RunOnsInTabbedRoutine} {PM_EmptyIndentedBlock}
## Otherwise {PM_NonCaseInIf} {PM_MisalignedOtherwise} {PM_MisalignedCase} {PM_MisarrangedOtherwise} {PM_DoubleOtherwise} {PM_OtherwiseIfAfterOtherwise} {PM_CaseValueNonConstant} {PM_CaseValueMismatch} {PM_OtherwiseWithoutIf} {PM_OtherwiseInNonIf}
## While
## Repeat {PM_CalledInRepeat}
## Repeat running through {PM_BadRepeatDomain}
## Next and break {PM_CantUseOutsideLoop}
## Stop
## Phrase options {PM_TooManyPhraseOptions} {PM_PhraseOptionsExclusive} {PM_NotAPhraseOption} {PM_NotTheOnlyPhraseOption} {PM_SayWithPhraseOptions}
## Let and temporary variables
## New conditions, new adjectives
## Phrases to decide other things {PM_ReturnWrongKind} {PM_UnknownValueToDecide} {PM_RedundantReturnKOV}
## The value after and the value before
# Advanced Actions
## A recap of actions
## How actions are processed {ARSUMMARY}
## Giving instructions to other people {var_person_asked}
## Persuasion {rules_per}
## Unsuccessful attempts {var_reason} {rules_fail}
## Spontaneous actions by other people
## New actions {NEWACTIONS} {PM_MatchedAsTooLong} {PM_MultiwordPastParticiple} {PM_GrammarMismatchesAction} {PM_ActionAlreadyExists} {PM_ActionBothValues} {PM_ActionClauseUnknown} {PM_ActionMisapplied}
## Irregular English verbs
## Check, carry out, report
## Action variables {PM_ActionVarsPastTense} {PM_ActionVarAnd} {PM_ActionVarOverspecific} {PM_ActionVarUnknownKOV} {PM_ActionVarValue} {PM_BadMatchingSyntax}
## Making actions work for other people
## Check rules for actions by other people {PM_DuplicateRuleName} {PM_RuleWithComma}
## Report rules for actions by other people
## Actions for any actor
## Out of world actions {OUTOFWORLD}
## Reaching inside and reaching outside rules {rules_ri}
## Visible vs touchable vs carried
## Changing reachability {var_person_reaching}
## Changing visibility {visibility}
## Stored actions {kind_storedaction}
## Guidelines on how to write rules about actions
# Relations
## Sentence verbs {VERBS} {PM_PropForBadKOV} {PM_RelationWithBadProperty} {PM_RelationWithEitherOrProperty} {PM_BadRelation} {PM_EveryWrongSide} {PM_KindRelatedToValue}
## What sentences are made up from
## What are relations? {RELATIONS}
## To carry, to wear, to have
## Making new relations {PM_RelationExists} {PM_FRFUnavailable} {PM_OneOrVariousWithWhen} {PM_BothOneAndMany} {PM_CantCallLeft} {PM_CantCallRight} {PM_CantCallBoth} {PM_OneToOneMiscalled} {PM_RelatedKindsUnknown} {PM_BadKOVForRelationProperty}
## Making reciprocal relations
## Relations in groups
## The built-in verbs and their meanings
## Defining new assertion verbs {PM_VerbRelationVague} {PM_VerbUnknownMeaning} {PM_VerbRelationUnknown} {PM_PresentPluralTwice} {PM_VerbMalformed} {PM_DuplicateVerbs1} {PM_PrepositionConjugated} {PM_PrepositionLong}
## Defining new prepositions
## Indirect relations
## Relations which express conditions {PM_Unassertable2} {PM_BadRelationCondition}
## Relations involving values
## Relations as values in their own right
## Temporary relations
## What are relations for?
# Adaptive Text and Responses
## Tense and narrative viewpoint
## Adaptive text
## More on adapting verbs
## Adapting text about the player
## Adapting text referring to other things
## Adapting demonstratives and possessives
## Can, could, may, might, must, should, would
## Adapting contractions
## Verbs as values {kind_verb}
## Responses
## Changing the text of responses
## The RESPONSES testing command
# Numbers and Equations
## How do we measure things?
## Numbers and real numbers {kind_number} {kind_real_number} {PM_InequalityFailed} {PM_CantEquateValues} {PM_EvenOverflow-G} {PM_ZMachineOverflow} {PM_ElementOverflow} {PM_LiteralOverflow}
## Real number conversions
## Printing real numbers
## Arithmetic
## Powers and logarithms
## Trigonometry
## Units {PM_LPNotKOV} {PM_LPBuiltInKOV} {PM_LPEnumeration} {PM_NegationInternal} {PM_NegationForbidden}
## Multiple notations {PM_DuplicateUnitSpec}
## Scaling and equivalents {PM_LPCantScaleYet} {PM_LPCantScaleTwice} {PM_LPTooLittleAccuracy}
## Named notations
## Making the verb "to weigh"
## The Metric Units extension
## Notations including more than one number {PM_LPWithoutElement} {PM_LPElementTooLarge} {PM_LPTooManyElements} {PM_LPTooComplicated} {PM_LPNotAllNamed}
## The parts of a number specification {PM_LPFirstOptional} {PM_LPMultipleOptional} {PM_BadLPPartOption} {PM_BadLPNameOption}
## Understanding specified numbers
## Totals {PM_TotalEitherOr} {PM_TotalTableColumn}
## Equations {EQUATIONS} {PM_EquationMisnumbered} {PM_EquationMisnamed} {PM_EquationSymbolMisdeclared} {PM_EquationSymbolMalformed} {PM_EquationSymbolVague} {PM_EquationSymbolNonValue} {PM_EquationSymbolEqualsKOV} {PM_EquationSymbolNonNumeric} {PM_EquationSymbolBadSub} {PM_EquationSymbolSpurious} {PM_EquationTokenUnrecognised} {PM_EquationLeadingZero} {PM_EquationOperatorUnrecognised} {PM_EquationTooComplex} {PM_EquationMispunctuated} {PM_EquationDoesntEquate} {PM_EquationEquatesBadly} {PM_EquationEquatesMultiply} {PM_EquationIncomparable}  {PM_EquationDimensionPower} {PM_EquationBadArithmetic} {PM_EquationBadTarget} {PM_EquationInsoluble} {PM_EquationSymbolMissing} {PM_EquationSymbolWrongKOV}
## Arithmetic with units
## Multiplication of units {PM_DimensionRedundant} {PM_DimensionNotBaseKOV} {PM_NonDimensional} {PM_UnitSequenceOverflow} {PM_DimensionsInconsistent} {PM_BadLPEquivalent} {PM_BadLPOffset} {PM_MultiplyingNonKOVs} {PM_BadArithmetic} {ARITHMETIC}
# Tables
## Laying out tables {TABLES} {PM_TableCoincidesWithKind} {PM_TableColumnEmptyLists} {PM_TablePlayerEntry} {PM_TableVariableEntry} {PM_TableDescriptionEntry} {PM_TableUnknownEntry} {PM_TableIncompatibleEntry} {PM_TableMisnamed} {PM_TableNameDuplicate} {PM_TableNameAmbiguous} {PM_TableTooManyColumns} {PM_TableColumnArticle} {PM_TableColumnAlready} {PM_TableWithoutRows} {PM_TableUndefined} {PM_TableOfQuantifiedKind} {PM_TableOfBuiltInKind} {PM_TableOfExistingKind} {PM_TableDefiningObject} {PM_TableWithBlankNames} {PM_TableEntryGeneric} {PM_TableKindlessColumn}  {PM_TableColumnBrackets} {PM_TableRowFull}
## Looking up entries
## Corresponding entries
## Changing entries
## Choosing rows {PM_NoRowSelected}
## Repeating through tables
## Blank entries
## Blank columns
## Blank rows
## Adding and removing rows
## Sorting
## Listed in...
## Topic columns
## Another scoring example
## Varying which table to look at {kind_tablename}
## Defining things with tables {PM_TableDefiningNothing} {PM_TableDefiningTheImpossible}
## Defining values with tables
## Table continuations {PM_TableNotContinuation}
## Table amendments {PM_TableAmendmentMisfit} {PM_TableAmendmentMismatch}
# Understanding
## Understand {PM_OldVerbUsage} {PM_UnderstandCommandWhen} {PM_NotNewCommand} {PM_NotOldCommand} {PM_NontextualUnderstand} {PM_UnderstandMismatch} {PM_TextlessMistake} {PM_UnderstandAsActivity} {PM_UnderstandAsBadValue} {PM_UnderstandVague} {PM_LiteralPunctuation} {PM_UnderstandEmptyText} {PM_UnderstandCommaCommand} {PM_UnderstandAsCompoundText} {PM_ObsoleteHeldTokens} {PM_UseTextNotTopic} {PM_UseThingNotObject} {PM_UnparsableKind} {PM_UnknownToken} {PM_BizarreToken} {PM_OverComplexToken} {PM_TextTokenRestricted} {someone_token} {UNDERSTANDING}
## New commands for old grammar {PM_ThreeValuedLine} {PM_TooManyAliases} {PM_TooManyGrammarLines} {PM_GrammarIllFounded}
## Overriding existing commands
## Standard tokens of grammar {things_token} {TOKENS}
## The text token {text_token}
## Actions applying to kinds of value
## Understanding any, understanding rooms
## Understanding names
## Understanding kinds of value {var_understood}
## Commands consisting only of nouns
## Understanding values {PM_UnderstandAsQualified} {PM_UnderstandPluralValue}
## This/that {PM_OverAmbitiousSlash} {PM_SlashedCommand}
## New tokens {PM_MixedOutcome} {PM_TwoValuedToken} {NEWTOKENS}
## Tokens can produce values
## Understanding things by their properties {PM_UnknownUnderstandProperty} {PM_BadUnderstandProperty} {PM_BadUnderstandPropertyAs} {PM_BadReferringProperty} {PM_UnknownUnpermittedProperty}
## Understanding things by their relations {PM_GrammarObjectlessRelation} {PM_GrammarBadRelation} {PM_GrammarValueRelation}
## Context: understanding when {PM_BadWhen}
## Changing the meaning of pronouns
## Does the player mean... {rules_dtpm}
## Multiple action processing
## Understanding mistakes
## Precedence
# Activities
## What are activities? {ACTIVITIES} {kind_activity} {PM_BadActivityName}
## How activities work
## Rules applied to activities
## While clauses {PM_BadWhenWhile}
## New activities {EXTACTIVITIES}
## Activity variables {PM_ActivityVariableNameless} {PM_ActivityVarAnd} {PM_ActivityVarOverspecific} {PM_ActivityVarUnknownKOV} {PM_ActivityVarValue}
## Beginning and ending activities manually
## Introduction to the list of built-in activities
## Deciding the concealed possessions of something {act_con} {var_particular}
## Printing the name of something {act_pn}
## Printing the plural name of something {act_ppn}
## Printing a number of something {act_pan}
## Listing contents of something {act_lc}
## Grouping together something {act_gt}
## Issuing the response text of something {act_resp}
## Printing room description details of something {act_details}
## Printing inventory details of something {act_idetails}
## Printing a refusal to act in the dark {act_toodark}
## Printing the announcement of darkness {act_nowdark}
## Printing the announcement of light {act_nowlight}
## Printing the name of a dark room {act_darkname}
## Printing the description of a dark room {act_darkdesc}
## Constructing the status line {act_csl}
## Writing a paragraph about {act_wpa}
## Listing nondescript items of something {act_lni}
## Printing the locale description of something {act_pld}
## Choosing notable locale objects for something {act_cnlo}
## Printing a locale paragraph about {act_plp}
## Deciding the scope of something {act_ds}
## Clarifying the parser's choice of something {act_clarify}
## Asking which do you mean {act_which}
## Supplying a missing noun/second noun {act_smn}
## Reading a command {act_reading} {var_command} {kind_snippet}
## Implicitly taking something {act_implicitly}
## Printing a parser error {act_parsererror}
## Deciding whether all includes {act_all}
## Printing the banner text {act_banner}
## Printing the player's obituary {act_obit}
## Amusing a victorious player {act_amuse}
## Starting the virtual machine {act_startvm}
# Rulebooks
## On rules {kind_rule} {kind_rulebook} {RULEBOOKS} {PM_RulebookWithAt} {PM_RulebookWithDefinition} {PM_RulebookWithTo}
## Named rules and rulebooks
## New rules {PM_BadRulePreambleWhen} {PM_BadRulePreamble} {PM_RuleWithDefiniteArticle} {PM_RuleWithoutColon}
## Listing rules explicitly {RLISTING} {PM_ImproperRulePlacement} {PM_BadRulePlacementNegation} {PM_UnspecifiedRulebookPlacement} {PM_NoSuchRuleExists} {PM_PlaceWithMissingRule}
## Changing the behaviour of rules {rules_proc}
## Sorting and indexing of rules
## The preamble of a rule
## New rulebooks {NEWRULEBOOKS}
## Basis of a rulebook
## Rulebook variables {PM_RulebookVariableAnd} {PM_RulebookVariableTooSpecific} {PM_RulebookVariableBadKind} {PM_RulebookVariableVague}
## Success and failure {PM_DefaultOutcomeTwice} {PM_BadDefaultOutcome}
## Named outcomes {PM_MisplacedRulebookOutcome} {PM_WrongEndToPhrase} {PM_BadOutcomeClarification} {PM_DefaultNamedOutcomeTwice} {PM_DefaultOutcomeAlready} {PM_DuplicateOutcome} {PM_NonOutcomeProperty}
## Rulebooks producing values
## Abide by
## Two rulebooks used internally {rules_internal}
## The Laws for Sorting Rulebooks
# Advanced Text
## Changing texts
## Memory limitations
## Characters, words, punctuated words, unpunctuated words, lines, paragraphs
## Upper and lower case letters
## Matching and exactly matching
## Regular expression matching
## Making new text with text substitutions
## Replacements
## Summary of regular expression notation
# Lists
## Lists and entries {kind_listof}
## Constant lists {PM_CantLetEmptyList} {PM_BadConstantListEntry} {PM_NonconstantConstantListEntry} {PM_IncompatibleConstantListEntry}
## Saying lists of values
## Testing and iterating over lists
## Building lists
## Lists of objects
## Lists of values matching a description
## Sorting, reversing and rotating lists
## Accessing entries in a list
## Lengthening or shortening a list
## Variations: arrays, logs, queues, stacks, sets, sieves and rings
# Advanced Phrases
## A review of kinds
## Descriptions as values {kind_description}
## Phrases as values
## Default values for phrase kinds
## Map, filter and reduce
## Generic phrases
## Kind variables
## Matching the names of kinds
## In what order?
## Ambiguities
# Figures, Sounds and Files
## Beyond text
## How IF views pictures
## Virtual machines and story file formats {PM_UnknownVirtualMachine}
## Gathering the figures {kind_figurename} {FIGURES}
## Declaring and previewing the figures {PM_PictureDuplicate} {PM_PictureNotTextual}
## Displaying the figures
## Recorded sounds {kind_soundname} {SOUNDS}
## Declaring and playing back sounds {PM_SoundDuplicate} {PM_SoundNotTextual}
## Providing accessibility text
## Some technicalities about figures and sounds
## Files {EFILES}
## Declaring files {kind_externalfile} {PM_BadFileIFID} {PM_BadFileOwner} {PM_FilenameDuplicate} {PM_FilenameNotTextual} {PM_FilenameUnsafe}
## Writing and reading tables to external files
## Writing, reading and appending text to files
## Exchanging files with other programs
# Testing and Debugging
## Checking against the Index
## Debugging features to use in source
## High-level debugging commands
## Low-level debugging commands
## Adding new testing verbs and Release for Testing
## Testing for thoroughness
## Commands for beta-testers
## Help from the user community
# Releasing
## The finished product
## Bibliographic data {PM_BadEpisode}
## Genres
## The Library Card {LCARDS}
## The Treaty of Babel and the IFID {IFIDS}
## The Release button and the Materials folder {PM_NoSuchPublicRelease} {release_files}
## The Joy of Feelies {PM_ReleaseAlong}
## Cover art {release_cover}
## An introductory booklet and postcard {release_booklet} {release_postcard}
## A website {release_website}
## A playable web page {release_interpreter}
## Using Inform with Vorple
## Website templates
## Advanced website templates
## Republishing existing works of IF {PM_RoomInIgnoredSource}
## Walkthrough solutions {release_solution}
## Releasing the source text {release_source} {release_card}
## Improving the index map {MAPHINTS} {PM_MapFromNonRoom} {PM_MapToNonRoom} {PM_MapNonLateral} {PM_MapUnknownColour} {PM_MapUnknownOffset} {PM_MapUnknownOffsetBase} {PM_MapBadRubric} {PM_MapSettingOfUnknown} {PM_MapSettingUnknown} {PM_MapSettingTooLong} {PM_MapSettingTypeFailed} {PM_MapHintUnknown} {PM_MapDirectionClue} {PM_MapPlacement} {PM_MapPlacementDirection}
## Producing an EPS format map {EPSMAP}
## Settings in the map-maker
## Table of map-maker settings
## Kinds of value accepted by the map-maker
## Titling and abbreviation
## Rubrics
# Publishing
## Finding a readership
## Editing and Quality Assurance
## A Page of Its Own
## The IF Archive
## IFDB: The Interactive Fiction Database
## Competitions, Exhibitions, and Jams
## Meetups and Conferences
## A short concluding homily
# Extensions
## The status of extensions {EXTENSIONS}
## The Standard Rules {SRULES}
## Built-in, installed and project-specific extensions
## Authorship
## A simple example extension {PM_ExtMultipleBeginsHere} {PM_ExtBeginsAfterEndsHere} {PM_ExtMultipleEndsHere} {PM_ExtNoBeginsHere} {PM_ExtNoEndsHere}
## Version numbering {PM_ExtVersionTooLow}
## Extensions and story file formats
## Extensions can include other extensions
## Extensions can interact with other extensions {PM_HeadingInPlaceOfUnincluded} {PM_HeadingInPlaceOfUnknown} {PM_UnequalHeadingInPlaceOf}
## Extensions in the Index
## Extension documentation
## Examples and headings in extension documentation
## Implications {PM_ImplicationCertain} {PM_ImplicationValueProperty}
## Using Inform 6 within Inform 7
## Defining phrases in Inform 6 {PM_UnendingI6} {PM_InlineTooLong} {PM_InlineRule} {PM_BadInlineExpansion} {PM_BadInlineTag}
## Phrases to decide in Inform 6
## Handling phrase options
## Making and testing use options
## Longer extracts of Inform 6 code
## Primitive Inform 6 declarations of rules
## Inform 6 objects and classes {PM_BadObjectTranslation}
## Inform 6 variables, properties, actions, and attributes {PM_TranslatesNonAction} {PM_TranslatesActionAlready} {PM_TranslatedTwice} {PM_TranslatedUnknownCategory} {PM_TranslatedToNonIdentifier} {PM_NonPropertyTranslated} {PM_NonQuantityTranslated} {PM_QuantityTranslatedAlready}
## Inform 6 Understand tokens {PM_GrammarTranslatedAlready}
## Inform 6 adjectives
## Naming Unicode characters
## Overriding definitions in kits {PM_BadI6Inclusion} {PM_BeforeTheLibrary} {PM_WhenDefiningUnknown} {PM_IncludeInsteadOf}
## Translating the language of play
## Segmented substitutions
## Invocation labels, counters and storage {PM_LabelNamespaceTooLong}
## To say one of
! End
